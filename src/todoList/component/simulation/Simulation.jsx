import React from 'react';import Toolbar from './../common/ToolBar.jsx'import Mode from './SimulationCalculateMode.jsx'import './simulation.less'class Simulation extends React.Component {    constructor(props) {        super(props);        this.state = {            percent: 0,            showConfigPanel: false,            currentFrame: 'direct',            tabs: [                {label: '漏层承压能力', value: 0 },                {label: '直井段预计水泥塞长', value: 0, code: 'direct'},                {label: '斜井段预计水泥塞长', value: 0, code: 'skew' },                {label: '水平段预计水泥塞长', value: 0, code: 'even' },                {label: '实际水泥塞长', value: 0 }            ]        };        this.frame = [            {label: '直井段', value: 'direct'},            {label: '斜井段', value: 'skew'},            {label: '水平段', value: 'even'}        ]    }    componentWillMount() {        let tabList = Object.assign(this.state.tabs, []);        tabList.forEach(item => {            item.value = (+window.localStorage.getItem(item.label)).toFixed(2);        })        this.setState({            tabs: tabList,        })    }    showConfigPanel() {        this.setState({            showConfigPanel: true        });    }    setBack(values) {        const tabList = Object.assign(this.state.tabs, []);        values.forEach(item => {            tabList.forEach(tabUnit => {                if(tabUnit.label === item.label) {                    tabUnit.value = (+item.value).toFixed(2);                }            });        });        this.setState({            tabs: tabList,        })    }    configPanel() {        if(this.state.showConfigPanel === true) {            return (<div className='configPanel'>                <div className='config' ref='configPanel'>                    <img className='close' src='./image/icon/close.png' onClick={this.close.bind(this)}/>                    <Mode.Total setBack={this.setBack.bind(this)}/>                </div>            </div>)        }        return null;    }    confirm() {        this.setState({            showConfigPanel: false        })    }    close() {        this.setState({            showConfigPanel: false        })    }    renderPrams() {        let list = [];        list.push(this.renderOption(this.state.tabs[0], 0));        if (this.state.currentFrame === 'direct') {            list.push(this.renderOption(this.state.tabs[1], 1));        } else if (this.state.currentFrame === 'skew') {            list.push(this.renderOption(this.state.tabs[2], 2));        } else if (this.state.currentFrame === 'even') {            list.push(this.renderOption(this.state.tabs[3], 3));        }        list.push(this.renderOption(this.state.tabs[4], 4));        return list;    }    renderOption(item, key) {        return <div className='config-unit' key={key}>            <div className='config-title'>                <span className='config-label'> {item.label} </span>            </div>            <div className='config-control'>                <span className='config-input' data-code={item.code}> {item.value} </span>            </div>        </div>    }    setFrame(v) {       this.setState({           currentFrame: v       })    }    getFrame() {        let list = [];        this.frame.forEach(item => {            list.push(<li key={item.label} onClick={this.setFrame.bind(this, item.value)} className={this.state.currentFrame === item.value ? 'selected' : ''}> {item.label} </li>)        });        return <ul className="frame-div">{list}</ul>    }    getSimuImg() {        let simu = {            'direct':  ['./image/simulation/direct.png', './image/simulation/direct-real.png'],            'skew':  ['./image/simulation/skew.png', './image/simulation/skew-real.png'],            'even':  ['./image/simulation/even.png', './image/simulation/even-real.png'],        }        return (<div className="simulation-div">            <img className="simu" src={simu[this.state.currentFrame][0]}/>            <div className="sep"></div>            <img className="real" src={simu[this.state.currentFrame][1]}/>        </div>);    }    simuTabs() {        return <div className="frame">            {this.getFrame()}            {this.getSimuImg()}        </div>    }    render() {        return <div className="simu-bg">            {this.configPanel()}            <div className="open-config" onClick={this.showConfigPanel.bind(this)}>设置</div>            {this.simuTabs()}            <div className="param-div">                {this.renderPrams()}            </div>            <Toolbar navigate={this.props.navigate && this.props.navigate.bind(this)}/>        </div>    }}export default Simulation;