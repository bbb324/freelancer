import React from 'react';import Toolbar from './../common/ToolBar.jsx'import Mode from './LoopCalculateMode.jsx'import './loop.less'class Loop extends React.Component {    constructor(props) {        super(props);        this.state = {            percent: 0,            showConfigPanel: false,            tabs: [{                label: '环空返速', imgUrl: 'ana-loop.png', code: 'loop', value: '0',                formula: '1.2732 * Math.pow(10, 3) *泵排量 / (Math.pow(井眼直径, 2) - Math.pow(钻具外径, 2))'            }]        };    }    setValue(v, code) {        const tabs = Object.assign(this.state.tabs, []);        let tab = tabs.filter(i => {return i.code === code})[0];        tab.value = v;        this.setState({            tabs: tabs        })    }    getCalculator(code) {        switch (code) {            case 'loop':                return <Mode.Loop setValue={this.setValue.bind(this)} code={code}/>;            default:                return null;        }    }    showConfigPanel() {        this.setState({            showConfigPanel: true        });    }    setValue(v) {        const tabs = Object.assign(this.state.tabs, []);        let tab = tabs[0]        tab.value = v;        this.setState({            tabs: tabs        })    }    getConfigs() {        let list = [];        let item = this.state.tabs[0]        list.push(<li className='config-unit' key={item.label} >           <div className='config-title'>               <span className='config-label'> {item.label} </span>               <span className='config-formula'> {item.formula} </span>           </div>           <div className='config-control'>               {this.getCalculator(item.code)}           </div>       </li>)        return list;    }    configPanel() {        if(this.state.showConfigPanel === true) {            return (<div className='configPanel'>                <div className='config' ref='configPanel'>                    {this.getConfigs()}                    <div className='btn-div'>                        <span className='confirm' onClick={this.confirm.bind(this)}>确定</span>                        <span onClick={this.cancel.bind(this)}>取消</span>                    </div>                </div>            </div>)        }        return null;    }    confirm() {        this.setState({            showConfigPanel: false        })    }    cancel() {        this.setState({            showConfigPanel: false        })    }    renderPrams() {        return <div className="loop-value-div">            <div className="value">{this.state.tabs[0].value}</div>        </div>    }    render() {        return <div className="loop-bg">            {this.configPanel()}            <div className="open-config" onClick={this.showConfigPanel.bind(this)}>设置</div>            <img className="loop-img" src={`./image/loop/loop.gif`}/>            <div className="param-div">                {this.renderPrams()}            </div>            <Toolbar navigate={this.props.navigate && this.props.navigate.bind(this)}/>        </div>    }}export default Loop;