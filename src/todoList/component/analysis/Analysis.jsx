import React from 'react';import Tabs from './../common/Tabs.jsx';import Toolbar from './../common/ToolBar.jsx'import AnalysisConfigPanel from './AnalysisConfigPanel.jsx'import AnalysisAnimation from './AnalysisAnimation.jsx'import './analysis.less'class Analysis extends React.Component {    constructor(props) {        super(props);        this.state = {            percent: 50,            showConfigPanel: false,            tabs: [                {label: '泵排量', imgUrl: 'ana-pump.png', code: 'pump', value: ''},                {label: '循环压耗', imgUrl: 'ana-cycle.png', code: 'cycle', value: ''},                {label: '钻头压降', imgUrl: 'ana-drill.png', code: 'drill', value: ''},                {label: '液流变参数', imgUrl: 'ana-params.png', code: 'params', value: ''},                {label: '环空返速', imgUrl: 'ana-loop.png', code: 'loop', value: ''},                {label: '流态', imgUrl: 'ana-flow.png', code: 'flow', value: ''}            ]        };    }  getPercent() {        return 32*this.state.percent*0.01;    }    /*    setValue(v) {        if(v >= 100) {            v = 100;        }        if(v <= 0) {            v = 0;        }        this.setState({            percent: v        })    }*/    showConfigPanel() {        this.setState({            showConfigPanel: true        });    }    setValue(item, el) {        //const tabs = Object.assign(this.state.tabs, {});        let tabs = this.state.tabs;        let curTab = tabs.filter(option => {            return option.code === item.code;        })        curTab[0].value = el;    }    getConfigs() {        let list = [];        this.state.tabs.forEach((item, key) => {            list.push(<li className='config-unit' key={key}>               <div className='config-title'>                   <span className='config-label'> {item.code} </span>               </div>                <div className='config-control'>                    <input className='config-input' onChange={this.setValue.bind(this, item)}/>                </div>            </li>)        });        return list;    }    confirm() {        this.setState({            showConfigPanel:false        })    }    cancel() {        this.setState({            showConfigPanel:false        })    }    configPanel() {        if(this.state.showConfigPanel === true) {            return <div className='configPanel'>                <div className='config'>                    {this.getConfigs()}                </div>                <div>                    <button onClick={this.confirm.bind(this)}>确定</button>                    <button onClick={this.cancel.bind(this)}>取消</button>                </div>            </div>        }        return null;    }    render() {        return (<div className="ana-content">            {this.configPanel()}            <div className="shiubeng-bg">               <AnalysisAnimation />               <div className="water-bg" style={{height: `${this.getPercent()}%`}}>                   <img className="water" src={`./image/analysis/water.png`}/>               </div>            </div>            <AnalysisConfigPanel dataSource={this.state.tabs} setData={this.showConfigPanel.bind(this)}/>            <Toolbar />            </div>)    }}export default Analysis;