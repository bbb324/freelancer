import React from 'react';function get(ref) {    return ref.value;}// 泵排量计算公式class Pump extends React.Component {    constructor(props) {        super(props);        this.state = {            value: 0        }    }    calculate() {       let value = Math.pow(Math.PI * ( get(this.refs.a) / 2), 2) * get(this.refs.b) * get(this.refs.c) * get(this.refs.d)  * get(this.refs.e) * 100;        this.props.setValue(value, this.props.code);       this.setState({           value: value       });    }    render() {        return <div className="math-params">           <input placeholder="管套直径" className='cal-input' ref='a'/>           <input placeholder="活塞冲程" className='cal-input' ref='b'/>           <input placeholder="缸套数" className='cal-input' ref='c'/>           <input placeholder="冲数" className='cal-input' ref='d'/>           <input placeholder="上水效率" className='cal-input' ref='e'/>           <div>               <span className='cal-btn' onClick={this.calculate.bind(this)}>计算</span>               <span> {this.state.value}% </span>               </div>        </div>    }}// 循环压耗class Cycle extends React.Component {    constructor(props) {        super(props);        this.state = {            value: 0        }    }    calculate() {        // v1 地面管汇压耗 = 地面管汇摩阻系数*钻井液密度*（泵排量/100）^1.86*9.818        let v1 = get(this.refs.e) * get(this.refs.b) * Math.pow((get(this.refs.a) / 100), 1.86) * 9.818;        // v2 钻铤段的内压耗 = 7628 * 塑性粘度^0.2*钻井液密度^0.8*泵排量^1.8* ((钻具长度/钻具内径)^4.82)        let v2 = 7628 * Math.pow(get(this.refs.c), 0.2) * Math.pow(get(this.refs.b), 0.8) * Math.pow(get(this.refs.a), 1.8) * get(this.refs.j) / Math.pow(get(this.refs.f), 4.82);        // v3 钻杆段的内压耗        let v3 = '';        // v4 钻铤段环空压耗        // v5 钻杆段环空压耗        this.state = {            value: v1 + v2        }    }    render() {        return <div className="math-params">            <input placeholder="泵排量" className='cal-input' ref='a'/>            <input placeholder="钻井液密度" className='cal-input' ref='b'/>            <input placeholder="塑性粘度" className='cal-input' ref='c'/>            <input placeholder="井眼直径" className='cal-input' ref='d'/>            <input placeholder="地面管汇摩阻系数" className='cal-input' ref='e'/>            <input placeholder="钻杆加重钻杆钻铤内径" className='cal-input' ref='f'/>            <input placeholder="钻杆加重钻杆钻铤外径" className='cal-input' ref='g'/>            <input placeholder="钻杆接箍外径" className='cal-input' ref='h'/>            <input placeholder="钻杆加重钻杆钻铤长度" className='cal-input' ref='j'/>            <div>                <span className='cal-btn' onClick={this.calculate.bind(this)}>计算</span>                <span> {this.state.value} </span>            </div>        </div>    }}// 钻头压降class Drill extends React.Component {    constructor(props) {        super(props);        this.state = {            value: 0        }    }    calculate() {        // v1 地面管汇压耗 = 地面管汇摩阻系数*钻井液密度*（泵排量/100）^1.86*9.818       let value = get(this.refs.a) - get(this.refs.b);        this.setState({            value: value        })    }    render() {        return <div className="math-params">            <input placeholder="泵压" className='cal-input' ref='a'/>            <input placeholder="循环压耗" className='cal-input' ref='b'/>            <div>                <span className='cal-btn' onClick={this.calculate.bind(this)}>计算</span>                <span> {this.state.value} </span>            </div>        </div>    }}class Params extends React.Component {    constructor(props) {        super(props);        this.state = {            n: 0,            k: 0,            av: 0,            pv: 0,            yp: 0,            rate: 0        }    }    calculate() {        // n 流性指数        let n = 3.322 * Math.log10((get(this.refs.a) / get(this.refs.b)))        //  k 稠度系数        let k = (0.511 * get(this.refs.b)) / Math.pow(511, 3.322 * Math.log10(get(this.refs.a) / this.refs.b))        // av 表观粘度        let av = get(this.refs.a) / 2        // pv 塑性粘度        let pv = get(this.refs.a) - get(this.refs.b)        // yp 动切力        let yp = 0.479 * (2 * get(this.refs.b) - get(this.refs.a))        // rate 动塑比        let rate = yp / pv;        this.setState({            n, k, av, pv, yp, rate        })    }    render() {        return <div className="math-params">            <input placeholder="Ф600" className='cal-input' ref='a'/>            <input placeholder="Ф300" className='cal-input' ref='b'/>            <div>                <span className='cal-btn' onClick={this.calculate.bind(this)}>计算</span>                <div>                    <div  className='params'> 流性指数：{this.state.n} </div>                    <div className='params'>稠度系数: {this.state.k} </div>                    <div className='params'>表观粘度：{this.state.av} </div>                    <div className='params'>塑性粘度: {this.state.pv} </div>                    <div className='params'>动切力: {this.state.yp} </div>                    <div className='params'>动塑比: {this.state.rate} </div>                </div>            </div>        </div>    }}class Loop extends React.Component {    constructor(props) {        super(props);        this.state = {            value: 0        }    }    calculate() {        // value 环空返速 = 1.2732 * Math.pow(10, 3) *泵排量 / (Math.pow(井眼直径, 2) - Math.pow(钻具外径, 2))        let value = 1.2732 * Math.pow(10, 3) * get(this.refs.a) / (Math.pow(get(this.refs.b), 2) - Math.pow(get(this.refs.c), 2))        this.setState({            value: value        })    }    render() {        return <div className="math-params">            <input placeholder="泵排量" className='cal-input' ref='a'/>            <input placeholder="井眼直径" className='cal-input' ref='b'/>            <input placeholder="钻具外径" className='cal-input' ref='c'/>            <div>                <span className='cal-btn' onClick={this.calculate.bind(this)}>计算</span>                <span> {this.state.value} </span>            </div>        </div>    }}class Flow extends React.Component {    constructor(props) {        super(props);        this.state = {            a: 0,            b: 0,            c: 0,        }    }    calculate() {        // value 环空返速 = 1.2732 * Math.pow(10, 3) *泵排量 / (Math.pow(井眼直径, 2) - Math.pow(钻具外径, 2))        let value = 1.2732 * Math.pow(10, 3) * get(this.refs.a) / (Math.pow(get(this.refs.b), 2) - Math.pow(get(this.refs.c), 2))        this.setState({            value: value        })    }    render() {        return <div className="math-params">            <input placeholder="钻杆内钻井液平均流速" className='cal-input' ref='a'/>            <input placeholder="钻杆内径" className='cal-input' ref='b'/>            <input placeholder="钻井液密度" className='cal-input' ref='c'/>            <input placeholder="有效视粘度" className='cal-input' ref='d'/>            <input placeholder="流性指数" className='cal-input' ref='e'/>            <input placeholder="环空返速" className='cal-input' ref='f'/>            <input placeholder="井眼直径" className='cal-input' ref='g'/>            <input placeholder="钻杆外径" className='cal-input' ref='h'/>            <div>                <span className='cal-btn' onClick={this.calculate.bind(this)}>计算</span>                <div>                    <div  className='params'> 钻杆内雷诺数：{this.state.a} </div>                    <div className='params'>环空雷诺数: {this.state.b} </div>                    <div className='params'>环空流态：{this.state.c} </div>                </div>            </div>        </div>    }}module.exports = {    Pump,    Cycle,    Drill,    Params,    Loop,    Flow};